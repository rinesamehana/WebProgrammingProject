
@model PaginatedList<EventStreamingPlatform.Models.Category>


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-action no-color">
        <p>
            Find by category :<input type="text" name="searchString" value="@ViewData["CurrentFilter"]"/>
            <input type="submit" value="Search" class="btn btn-success"/>
            <a asp-action="Index"> Back to Full List </a>
        </p>

    </div>

</form>
   

<table class="table">
    <thead>
        <tr>
            <th>
                 <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]" asp-route-CurrentFilter="@ViewData["CurrentFilter"]">CategoryName</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                    <a asp-action="Edit" asp-route-id="@item.CategoryID" type="button" class="btn btn-primary" >Edit</a>
                    <a asp-action="Details" asp-route-id="@item.CategoryID" type="button" class="btn btn-primary">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.CategoryID" type="button" class="btn btn-danger">Delete</a>
            </td>
        </tr>
       
}
    </tbody>
</table>
      @{
    var prevDisabled = !Model.PreviousPage ? "disabled" : "";
    var nextDisabled = !Model.NextPage ? "disabled" : "";
} 

<a asp-action="Index"
   asp-route-sortOrder ="@ViewData["CurrentSort"]"
   asp-route-pageNumber ="@(Model.PageIndex-1)"
   asp-route-currentFilter = "@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex+1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

